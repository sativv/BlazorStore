@page "/"

@using DynamicTechShop.Models
@using static System.Net.WebRequestMethods
@using System.Net.Http
@using System.Text.Json
@using DynamicTechShop.Database
@inject HttpClient Http

<PageTitle>Products</PageTitle>
<label>Search for a product: </label>
<input id="inputField" type="text" @oninput="FilterProducts " class="mb-5"  />
<label class="float-end">Items in cart: @ShoppingCartList.shoppingCart.Count()</label>

@if (isFiltered && productList != null)
{
    <div class="row">
        @foreach (var product in filteredList)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                      <a href="/details/@product.Id" style="text-decoration:none;">
                    <img src="@product.ImageUrl" class="card-img-top product-image" alt="@product.Name">
                    <div class="card-body">                     
                            <h5 class="card-title">@product.Name</h5>                     
                        <p class="card-text">$@product.Price</p>
                    </div>
                    </a>
                    <div class="card-footer">
                        <button class="btn btn-warning btn-block" @onclick="() => AddToCart(product.Id)">Add to Cart</button>
          
                    </div>
                </div>
            </div>
        }
    </div>
}
else    
{
    <div class="row">
        @foreach (var product in productList)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <a href="/details/@product.Id" style="text-decoration:none;">
                    <img src="@product.ImageUrl" class="card-img-top product-image" alt="@product.Name">
                    <div class="card-body">
                       
                        <h5 class="card-title">@product.Name</h5>
                       
                        <p class="card-text">$@product.Price</p>
                    </div>
                    </a>
                    <div class="card-footer">
                        <button class="btn btn-warning btn-block" @onclick="() => AddToCart(product.Id)">Add to Cart</button>
                        
                    </div>
                </div>
            </div>
        }
    </div>
}


 





@code {
    List<ProductModel> productList;
    List<ProductModel> filteredList;
    bool isFiltered;


    [Parameter]
    public string filterString  { get; set; } 


    public void AddToCart(int id )
    {
        ProductModel itemToAdd = productList.FirstOrDefault(p => p.Id == id);
        ShoppingCartList.shoppingCart.Add(itemToAdd);

    }
    protected override async Task OnInitializedAsync()
    {
        productList = await Http.GetFromJsonAsync <List<ProductModel>>("sample-data/products.json");
        // var json = await httpClient.GetStringAsync("products.json");
        // productList = JsonSerializer.Deserialize<List<ProductModel>>(json, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });

    }

 
    public void FilterProducts(ChangeEventArgs e)
    {


        if (string.IsNullOrEmpty(e.Value.ToString()))
        {
            isFiltered = false;
            return;
        }
        filteredList = productList.Where(item => item.Name.ToLower().Contains(e.Value.ToString().ToLower())).ToList();
        isFiltered = true;
    }

    


}